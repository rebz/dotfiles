#!/bin/bash
# https://github.com/larrybotha/designer-dotfiles
# https://github.com/mathiasbynens/dotfiles/blob/master/.macos

# Hide "last login" line when starting a new terminal session
touch $HOME/.hushlogin



###############################################################################
# Screen                                                                      #
###############################################################################

# Require password immediately after sleep or screen saver begins
#defaults write com.apple.screensaver askForPassword -int 1
#defaults write com.apple.screensaver askForPasswordDelay -int 0

# Save screenshots to the desktop
defaults write com.apple.screencapture location -string "$HOME/Desktop"

# Save screenshots in PNG format (other options: BMP, GIF, JPG, PDF, TIFF)
defaults write com.apple.screencapture type -string "png"



###############################################################################
# Finder                                                                      #
###############################################################################

# Finder: disable window animations and Get Info animations
defaults write com.apple.finder DisableAllAnimations -bool true

# Finder: show path bar
defaults write com.apple.finder ShowPathbar -bool true

# Finder: allow text selection in Quick Look
defaults write com.apple.finder QLEnableTextSelection -bool true

# Finder: show hidden files by default
defaults write com.apple.finder AppleShowAllFiles -bool true

# Finder: show all filename extensions
defaults write NSGlobalDomain AppleShowAllExtensions -bool true

# Avoid creating .DS_Store files on network volumes
defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true

# Enable snap-to-grid for icons on the desktop and in other icon views
/usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist



###############################################################################
# Dock, Dashboard, and hot corners                                            #
###############################################################################

# Don’t animate opening applications from the Dock
defaults write com.apple.dock launchanim -bool false

# Speed up Mission Control animations
defaults write com.apple.dock expose-animation-duration -float 0.1

# Don’t automatically rearrange Spaces based on most recent use
defaults write com.apple.dock mru-spaces -bool false

# Remove the auto-hiding Dock delay
defaults write com.apple.dock autohide-delay -float 0

# Remove the animation when hiding/showing the Dock
defaults write com.apple.dock autohide-time-modifier -float 0

# Automatically hide and show the Dock
defaults write com.apple.dock autohide -bool true



#################################################################
### XCode Command Line Tools
#################################################################

echo 'install xcode command line tools'
echo '-----------------'
xcode-select --install



#################################################################
### Mac OS Mojave Required Libraries for below
#################################################################

echo 'install Mojave missing libraries'
echo '-----------------'
brew install openldap libiconv



#################################################################
### GIT
#################################################################

# global gitigore
ln -s $HOME/.dotfiles/shell/.gitignore_global $HOME/.gitignore_global
ln -s $HOME/.dotfiles/shell/.gitconfig $HOME/.gitconfig
git config --global core.excludesfile $HOME/.global-gitignore
clear

# global git config setup
git config --global core.autocrlf true
# git config --global core.excludesfile $HOME/.global-gitignore



#################################################################
### ZSH
#################################################################

# install zsh
echo 'install oh-my-zhs'
echo '-----------------'
rm -rf $HOME/.oh-my-zsh
curl -L http://install.ohmyz.sh | sh
git clone https://github.com/zsh-users/zsh-autosuggestions ~/.zsh/zsh-autosuggestions
git clone https://github.com/denysdovhan/spaceship-prompt.git "$ZSH_CUSTOM/themes/spaceship-prompt"

# symlink zsh prefs
rm $HOME/.zshrc
ln -s $HOME/.dotfiles/shell/.zshrc $HOME/.zshrc

# copy spaceship theme over
ln -s "$ZSH_CUSTOM/themes/spaceship-prompt/spaceship.zsh-theme" "$ZSH_CUSTOM/themes/spaceship.zsh-theme" # TODO - this does not appear to copy over



#################################################################
### WGET
#################################################################

echo 'install wget'
echo '------------'
brew install wget --overwrite



#################################################################
### Homebrew
#################################################################

echo 'install homebrew'
echo '----------------'
echo install homebrew
sudo rm -rf /usr/local/Cellar /usr/local/.git && brew cleanup
ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

echo 'Install brew-cask'
echo '-----------------'
brew tap caskroom/cask
brew install brew-cask



#################################################################
### Remove Mac Mojave Apache Install + Re-install
#################################################################

echo 'stop Mac Mojave apache, uninstall'
echo '------------'
sudo apachectl stop
sudo launchctl unload -w /System/Library/LaunchDaemons/org.apache.httpd.plist 2>/dev/null

echo 'install httpd'
echo '------------'
brew install httpd
sudo brew services start httpd



#################################################################
### PHP
#################################################################

echo 'install, start, link php 7.1'
echo '------------'
brew install php71
brew install php71-xdebug
sudo brew services start homebrew/php/php71
brew link --force --overwrite php@7.1 # todo - link php

# switch between installs
# `brew unlink php@7.3 && brew link --force --overwrite php@5.6`

# edit ini files
# /usr/local/etc/php/5.6/php.ini
# /usr/local/etc/php/7.0/php.ini
# /usr/local/etc/php/7.1/php.ini
# /usr/local/etc/php/7.2/php.ini
# /usr/local/etc/php/7.3/php.ini

echo 'install php 7.1 mcrypt'
echo '------------'
brew install homebrew/php/php71-mcrypt

echo 'install php 7.1 imagick'
echo '------------'
brew install homebrew/php/php71-imagick

echo 'install php 7.1 mongodb'
echo '------------'
brew install php71-mongodb

# brew install php@7.2
# echo 'Install xdebug'
# echo '--------------'
# pecl install xdebug





#################################################################
### Composer
#################################################################

echo 'install composer'
echo '----------------'
cd ~/.dotfiles
brew install composer



#################################################################
### Redis
#################################################################

echo 'install redis'
echo '------------'
brew install redis
brew install --HEAD homebrew/php/php71-redis
sudo brew services start redis



#################################################################
### Server Stuff for Valet
#################################################################

echo 'install dnsmasq'
echo '------------'
brew install dnsmasq
sudo brew services start dnsmasq

echo 'install nginx'
echo '------------'
brew install nginx
sudo brew services start nginx



#################################################################
### Valet
#################################################################

echo 'install laravel valet'
echo '---------------------'
composer global require laravel/valet
valet install



#################################################################
### MySQL
#################################################################

echo 'install mysql'
echo '---------------'
brew install mysql
brew services start mysql



#################################################################
### Mongo
#################################################################

echo 'install mongo'
echo '---------------'
brew install mongo
brew services start mongodb



#################################################################
### Sequel Pro
#################################################################

echo 'install sequel pro nightly'
echo '---------------'
brew cask install homebrew/cask-versions/sequel-pro-nightly



#################################################################
### Node
#################################################################

# install nvm
echo 'install NVM'
echo '...then `nvm install 10.15.0`'
echo '...then install zsh nvm plugin'
echo '---------------'
curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash
nvm install 10.15.0
git clone https://github.com/lukechilds/zsh-nvm ~/.oh-my-zsh/custom/plugins/zsh-nvm

# install yarn
echo 'install yarn'
echo '------------'
brew install yarn



#################################################################
### Other
#################################################################

# install some nice quicklook plugins
echo 'install some nice quicklook plugins'
echo '-----------------------------------'
brew cask install --force qlcolorcode qlstephen qlmarkdown quicklook-json qlprettypatch quicklook-csv betterzipql webp-quicklook suspicious-package

# dos2unix
echo 'install dos2unix'
echo '------------'
brew install dos2unix

#install file watch (needed for watching phpunit tests)
echo 'install onchange'
echo '----------------'
npm install -g onchange



#################################################################
### Cleanup
#################################################################

echo 'fixing ZSH'
echo '------------'

cd ~/.oh-my-zsh

git config core.autocrlf input
git rm --cached -r .
git reset --hard

dos2unix ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh
dos2unix ~/.oh-my-zsh/custom/plugins/zsh-nvm/zsh-nvm.plugin.zsh
find ~/.oh-my-zsh/custom/themes/spaceship-prompt/. -type f -print0 | xargs -0 dos2unix

echo '++++++++++++++++++++++++++++++'
echo '++++++++++++++++++++++++++++++'
echo 'all done'

echo '++++++++++++++++++++++++++++++'
echo 'Some optional tidbits'

echo '1. set some sensible os x defaults by running: $HOME/.dotfiles/osx/set-defaults.sh'
echo '2. make a .dotfiles-custom/shell/.(exports,aliases,functions,zshrc) for your personal commands'

echo '++++++++++++++++++++++++++++++'
echo 'Sometimes ZSH has issues with line endings after installing. Just copy the error and paste into their issues https://github.com/robbyrussell/oh-my-zsh/issues'

echo '++++++++++++++++++++++++++++++'
echo 'Please report issues!'
