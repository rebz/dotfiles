#!/bin/bash
# https://github.com/larrybotha/designer-dotfiles
# https://github.com/mathiasbynens/dotfiles/blob/master/.macos

###############################################################################
# Screen                                                                      #
###############################################################################

# Require password immediately after sleep or screen saver begins
#defaults write com.apple.screensaver askForPassword -int 1
#defaults write com.apple.screensaver askForPasswordDelay -int 0

# Save screenshots to the desktop
defaults write com.apple.screencapture location -string "$HOME/Desktop"

# Save screenshots in PNG format (other options: BMP, GIF, JPG, PDF, TIFF)
defaults write com.apple.screencapture type -string "png"



###############################################################################
# Finder                                                                      #
###############################################################################

# Finder: disable window animations and Get Info animations
defaults write com.apple.finder DisableAllAnimations -bool true

# Finder: show path bar
defaults write com.apple.finder ShowPathbar -bool true

# Finder: allow text selection in Quick Look
defaults write com.apple.finder QLEnableTextSelection -bool true

# Finder: show hidden files by default
defaults write com.apple.finder AppleShowAllFiles -bool true

# Finder: show all filename extensions
defaults write NSGlobalDomain AppleShowAllExtensions -bool true

# Avoid creating .DS_Store files on network volumes
defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true

# Enable snap-to-grid for icons on the desktop and in other icon views
/usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist




###############################################################################
# Dock, Dashboard, and hot corners                                            #
###############################################################################

# Don’t animate opening applications from the Dock
defaults write com.apple.dock launchanim -bool false

# Speed up Mission Control animations
defaults write com.apple.dock expose-animation-duration -float 0.1

# Don’t automatically rearrange Spaces based on most recent use
defaults write com.apple.dock mru-spaces -bool false

# Remove the auto-hiding Dock delay
defaults write com.apple.dock autohide-delay -float 0

# Remove the animation when hiding/showing the Dock
defaults write com.apple.dock autohide-time-modifier -float 0

# Automatically hide and show the Dock
defaults write com.apple.dock autohide -bool true




#install zsh
echo 'install oh-my-zhs'
echo '-----------------'
rm -rf $HOME/.oh-my-zsh
curl -L http://install.ohmyz.sh | sh

#global gitigore
ln -s $HOME/.dotfiles/shell/.global-gitignore $HOME/.global-gitignore
git config --global core.excludesfile $HOME/.global-gitignore

#symlink zsh prefs
rm $HOME/.zshrc
ln -s $HOME/.dotfiles/shell/.zshrc $HOME/.zshrc

#symlink yarn prefs
rm $HOME/.yarnrc
ln -s $HOME/.dotfiles/shell/.yarnrc $HOME/.yarnrc

#install composer
echo 'install composer'
echo '----------------'
cd ~/.dotfiles
curl -sS https://getcomposer.org/installer | php
echo 'move composer to /usr/local/bin/composer'
mv -f composer.phar /usr/local/bin/composer

#install homebrew
echo 'install homebrew'
  echo '----------------'
echo install homebrew
sudo rm -rf /usr/local/Cellar /usr/local/.git && brew cleanup
ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

# Install GNU core utilities (those that come with OS X are outdated)
brew install coreutils
echo "Don’t forget to add $(brew --prefix coreutils)/libexec/gnubin to \$PATH."

# Install GNU `find`, `locate`, `updatedb`, and `xargs`, g-prefixed
brew install findutils

# Install Bash 4
brew install bash

# Install native apps
brew tap phinze/homebrew-cask
brew install brew-cask

#install wget
echo 'install wget'
echo '------------'
brew install wget --overwrite

#install httpie
echo 'install httpie'
echo '------------'
brew install httpie

#install speedtest_cli
brew install speedtest_cli


#install ncdu
echo 'install ncdu'
echo 'https://dev.yorhel.nl/ncdu'
echo '------------'
brew install ncdu

#install ack
echo 'install ack'
echo '------------'
brew install ack

#install brew-cask
echo 'install brew-cask'
echo '------------------'
brew tap caskroom/cask
brew install brew-cask

#install some nice quicklook plugins
echo 'install some nice quicklook plugins'
echo '-----------------------------------'
brew cask install --force qlcolorcode qlstephen qlmarkdown quicklook-json qlprettypatch quicklook-csv betterzipql webp-quicklook suspicious-package

#install envoy
echo 'install laravel envoy'
echo '---------------------'
composer global require "laravel/envoy=~1.0"

#install php-cs-fixer
echo 'install php-cs-fixer'
echo '--------------------'
composer global require friendsofphp/php-cs-fixer

#install php
echo 'install php'
echo '------------'
brew tap homebrew/dupes
brew tap homebrew/versions
brew tap homebrew/homebrew-php
brew install php71
brew install php71-xdebug
sudo brew services start homebrew/php/php71
brew install homebrew/php/php71-mcrypt
brew install homebrew/php/php71-imagick
brew install php71-mongodb

#install redis
echo 'install redis'
echo '------------'
brew install redis
brew install --HEAD homebrew/php/php71-redis

#install valet
echo 'install laravel valet'
echo '---------------------'
composer global require laravel/valet
valet install

#install mysql
echo 'install mysql'
echo '---------------'
brew install mysql
brew services start mysql

#install mongo
echo 'install mongo'
echo '---------------'
brew install mongo
brew services start mongodb

#install yarn
echo 'install yarn'
echo '------------'
brew install yarn

# dos2unix
echo 'install dos2unix'
echo '------------'
brew install dos2unix

#install file watch (needed for watching phpunit tests)
echo 'install onchange'
echo '----------------'
npm install -g onchange

# install gulp
echo 'install gulp'
echo '------------'
npm install -g gulp

# install bower
echo 'install bower'
echo '------------'
npm install -g bower

# Update brew cask symlink location
export HOMEBREW_CASK_OPTS="--appdir=/Applications"

function installcask() {
	if brew cask info "${@}" | grep "Not installed" > /dev/null; then
		brew cask install "${@}"
	else
		echo "${@} is already installed."
	fi
}

installcask a-better-finder-rename
installcask alfred
installcask asepsis
installcask betterzipql
installcask dropbox
installcask google-chrome
installcask imagealpha
installcask imageoptim
installcask iterm2
installcask libreoffice
installcask quicklook-csv
installcask quicklook-json
installcask qlcolorcode
installcask qlmarkdown
installcask qlprettypatch
installcask qlstephen
installcask screenhero
installcask sizzlingkeys
installcask the-unarchiver
installcask thunderbird
installcask vlc

# Remove outdated versions from the cellar
brew cleanup

echo '++++++++++++++++++++++++++++++'
echo '++++++++++++++++++++++++++++++'
echo 'all done'

echo '++++++++++++++++++++++++++++++'
echo 'Some optional tidbits'

echo '1. set some sensible os x defaults by running: $HOME/.dotfiles/osx/set-defaults.sh'
echo '2. make a .dotfiles-custom/shell/.aliases for your personal commands'
